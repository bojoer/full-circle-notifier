#############################################################################
# Makefile for building: fcnotify
# Generated by qmake (2.01a) (Qt 4.6.3) on: Sun Aug 15 18:52:41 2010
# Project:  fcnotify.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile fcnotify.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++-64 -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include -Iqtsingleapplication -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,--hash-style=gnu -Wl,--as-needed
LIBS          = $(SUBLIBS)  -L/usr/lib -lqjson -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		fcnotify.cpp \
		qtsingleapplication/qtsinglecoreapplication.cpp \
		qtsingleapplication/qtsingleapplication.cpp \
		qtsingleapplication/qtlocalpeer.cpp \
		updatechecker.cpp \
		fcsettings.cpp \
		downloader.cpp moc_fcnotify.cpp \
		moc_qtsinglecoreapplication.cpp \
		moc_qtsingleapplication.cpp \
		moc_qtlocalpeer.cpp \
		moc_updatechecker.cpp \
		moc_fcsettings.cpp \
		moc_downloader.cpp \
		qrc_resources.cpp
OBJECTS       = main.o \
		fcnotify.o \
		qtsinglecoreapplication.o \
		qtsingleapplication.o \
		qtlocalpeer.o \
		updatechecker.o \
		fcsettings.o \
		downloader.o \
		moc_fcnotify.o \
		moc_qtsinglecoreapplication.o \
		moc_qtsingleapplication.o \
		moc_qtlocalpeer.o \
		moc_updatechecker.o \
		moc_fcsettings.o \
		moc_downloader.o \
		qrc_resources.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		fcnotify.pro
QMAKE_TARGET  = fcnotify
DESTDIR       = 
TARGET        = fcnotify

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_fcnotify.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: fcnotify.pro  /usr/share/qt/mkspecs/linux-g++-64/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile fcnotify.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/qt.prf:
/usr/share/qt/mkspecs/features/unix/thread.prf:
/usr/share/qt/mkspecs/features/moc.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++-64 -unix CONFIG+=debug -o Makefile fcnotify.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/fcnotify1.0.0 || $(MKDIR) .tmp/fcnotify1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/fcnotify1.0.0/ && $(COPY_FILE) --parents fcnotify.h qtsingleapplication/qtsinglecoreapplication.h qtsingleapplication/qtsingleapplication.h qtsingleapplication/qtlockedfile.h qtsingleapplication/qtlocalpeer.h updatechecker.h fcsettings.h downloader.h .tmp/fcnotify1.0.0/ && $(COPY_FILE) --parents resources.qrc .tmp/fcnotify1.0.0/ && $(COPY_FILE) --parents main.cpp fcnotify.cpp qtsingleapplication/qtsinglecoreapplication.cpp qtsingleapplication/qtsingleapplication.cpp qtsingleapplication/qtlocalpeer.cpp updatechecker.cpp fcsettings.cpp downloader.cpp .tmp/fcnotify1.0.0/ && $(COPY_FILE) --parents fcnotify.ui .tmp/fcnotify1.0.0/ && (cd `dirname .tmp/fcnotify1.0.0` && $(TAR) fcnotify1.0.0.tar fcnotify1.0.0 && $(COMPRESS) fcnotify1.0.0.tar) && $(MOVE) `dirname .tmp/fcnotify1.0.0`/fcnotify1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/fcnotify1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_fcnotify.cpp moc_qtsinglecoreapplication.cpp moc_qtsingleapplication.cpp moc_qtlocalpeer.cpp moc_updatechecker.cpp moc_fcsettings.cpp moc_downloader.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_fcnotify.cpp moc_qtsinglecoreapplication.cpp moc_qtsingleapplication.cpp moc_qtlocalpeer.cpp moc_updatechecker.cpp moc_fcsettings.cpp moc_downloader.cpp
moc_fcnotify.cpp: downloader.h \
		fcsettings.h \
		fcnotify.h \
		updatechecker.h \
		fcnotify.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fcnotify.h -o moc_fcnotify.cpp

moc_qtsinglecoreapplication.cpp: qtsingleapplication/qtsinglecoreapplication.h
	/usr/bin/moc $(DEFINES) $(INCPATH) qtsingleapplication/qtsinglecoreapplication.h -o moc_qtsinglecoreapplication.cpp

moc_qtsingleapplication.cpp: qtsingleapplication/qtsingleapplication.h
	/usr/bin/moc $(DEFINES) $(INCPATH) qtsingleapplication/qtsingleapplication.h -o moc_qtsingleapplication.cpp

moc_qtlocalpeer.cpp: qtsingleapplication/qtlockedfile.h \
		qtsingleapplication/qtlocalpeer.h
	/usr/bin/moc $(DEFINES) $(INCPATH) qtsingleapplication/qtlocalpeer.h -o moc_qtlocalpeer.cpp

moc_updatechecker.cpp: fcsettings.h \
		updatechecker.h
	/usr/bin/moc $(DEFINES) $(INCPATH) updatechecker.h -o moc_updatechecker.cpp

moc_fcsettings.cpp: fcsettings.h
	/usr/bin/moc $(DEFINES) $(INCPATH) fcsettings.h -o moc_fcsettings.cpp

moc_downloader.cpp: fcsettings.h \
		fcnotify.h \
		downloader.h \
		updatechecker.h \
		downloader.h
	/usr/bin/moc $(DEFINES) $(INCPATH) downloader.h -o moc_downloader.cpp

compiler_rcc_make_all: qrc_resources.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_resources.cpp
qrc_resources.cpp: resources.qrc \
		images/fclogo.png
	/usr/bin/rcc -name resources resources.qrc -o qrc_resources.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_fcnotify.h
compiler_uic_clean:
	-$(DEL_FILE) ui_fcnotify.h
ui_fcnotify.h: fcnotify.ui
	/usr/bin/uic fcnotify.ui -o ui_fcnotify.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

main.o: main.cpp fcnotify.h \
		downloader.h \
		fcsettings.h \
		updatechecker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

fcnotify.o: fcnotify.cpp fcnotify.h \
		downloader.h \
		fcsettings.h \
		updatechecker.h \
		ui_fcnotify.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fcnotify.o fcnotify.cpp

qtsinglecoreapplication.o: qtsingleapplication/qtsinglecoreapplication.cpp qtsingleapplication/qtsinglecoreapplication.h \
		qtsingleapplication/qtlocalpeer.h \
		qtsingleapplication/qtlockedfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qtsinglecoreapplication.o qtsingleapplication/qtsinglecoreapplication.cpp

qtsingleapplication.o: qtsingleapplication/qtsingleapplication.cpp qtsingleapplication/qtsingleapplication.h \
		qtsingleapplication/qtlocalpeer.h \
		qtsingleapplication/qtlockedfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qtsingleapplication.o qtsingleapplication/qtsingleapplication.cpp

qtlocalpeer.o: qtsingleapplication/qtlocalpeer.cpp qtsingleapplication/qtlocalpeer.h \
		qtsingleapplication/qtlockedfile.h \
		qtsingleapplication/qtlockedfile.cpp \
		qtsingleapplication/qtlockedfile_win.cpp \
		qtsingleapplication/qtlockedfile_unix.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qtlocalpeer.o qtsingleapplication/qtlocalpeer.cpp

updatechecker.o: updatechecker.cpp updatechecker.h \
		fcsettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o updatechecker.o updatechecker.cpp

fcsettings.o: fcsettings.cpp fcsettings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fcsettings.o fcsettings.cpp

downloader.o: downloader.cpp downloader.h \
		fcsettings.h \
		fcnotify.h \
		updatechecker.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o downloader.o downloader.cpp

moc_fcnotify.o: moc_fcnotify.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fcnotify.o moc_fcnotify.cpp

moc_qtsinglecoreapplication.o: moc_qtsinglecoreapplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qtsinglecoreapplication.o moc_qtsinglecoreapplication.cpp

moc_qtsingleapplication.o: moc_qtsingleapplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qtsingleapplication.o moc_qtsingleapplication.cpp

moc_qtlocalpeer.o: moc_qtlocalpeer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qtlocalpeer.o moc_qtlocalpeer.cpp

moc_updatechecker.o: moc_updatechecker.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_updatechecker.o moc_updatechecker.cpp

moc_fcsettings.o: moc_fcsettings.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fcsettings.o moc_fcsettings.cpp

moc_downloader.o: moc_downloader.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_downloader.o moc_downloader.cpp

qrc_resources.o: qrc_resources.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_resources.o qrc_resources.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

